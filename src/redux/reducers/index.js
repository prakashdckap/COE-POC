import { combineReducers } from "redux";
import {
  customerCartId,
  guestCartId,
  cartItems,
  displayCart,
  cartDetails,
  isCouponApplied,
  storeCredit,
  estimateShipping,
  routeShippingValue,
  selectedState,
  setSuccess,
  setWishlistSuccess,
  setCartSuccess,
  setWishlistError,
  setWishlistWarning,
  setError,
} from "./cart";
import {
  customerToken,
  customerDetails,
  customerAddressList,
  legalPopupStatus,
  ageVerificationDetails,
  newsletterSubcription,
  orderDetail,
  sessionTimeout,
  availableRewardPoints,
  showUser,
  referralSubscription,
} from "./customer";
import {
  checkoutShippingAddress,
  checkoutShippingMethod,
  checkoutPaymentMethod,
  checkoutBillingAddress,
  availableShippingMethods,
  availablePaymentMethods,
  checkoutEmail,
  paymentDetails,
  isShippingAddressVerified,
  verifiedAddressArr,
  checkoutErrorMessage,
  loading,
  sezzleUrl,
} from "./checkout";
import notification from "./notification-popup";
import countries from "./countries";
import { shippingTrackingDetails } from "./cms";
import {
  megaMenu,
  brandName,
  offerNotification,
  featureBrand,
  topPromoBanner,
  onpagetopPromoBanner,
  setLoginAttempts,
} from "./header";
import lastSelectedFilter, { plpListing } from "./filters";
// import { setWishlistSuccess } from "./wishlist";

const rootReducer = combineReducers({
  customerToken,
  customerDetails,
  ageVerificationDetails,
  legalPopupStatus,
  customerCartId,
  customerAddressList,
  shippingTrackingDetails,
  guestCartId,
  availableRewardPoints,
  cartItems,
  displayCart,
  estimateShipping,
  routeShippingValue,
  selectedState,
  cartDetails,
  isCouponApplied,
  checkoutShippingAddress,
  checkoutShippingMethod,
  checkoutPaymentMethod,
  paymentDetails,
  checkoutBillingAddress,
  availableShippingMethods,
  availablePaymentMethods,
  isShippingAddressVerified,
  verifiedAddressArr,
  checkoutEmail,
  notification,
  countries,
  storeCredit,
  newsletterSubcription,
  orderDetail,
  brandName,
  offerNotification,
  megaMenu,
  sessionTimeout,
  showUser,
  referralSubscription,
  featureBrand,
  setSuccess,
  lastSelectedFilter,
  setWishlistSuccess,
  setCartSuccess,
  setWishlistError,
  setWishlistWarning,
  checkoutErrorMessage,
  plpListing,
  topPromoBanner,
  onpagetopPromoBanner,
  loading,
  setLoginAttempts,
  setError,
  sezzleUrl,
});

export default rootReducer;
